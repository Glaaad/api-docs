openapi: 3.0.0
info:
  title: Payment System API
  description: Cпецификация API для обработки платежей банковскими картами посредством сайта или платежного терминала с тремя основными методами.
  version: 1.3.5
servers:
  - url: https://api.yashek.payments.system.ru/v1
    description: Основной сервер
security:
  - oauth2ClientCredentials: []

paths:
  /payments:
    post:
      tags:
        - Операции с платежами
      summary: Создание нового платежа
      operationId: createPayment
      description: Создает новый платеж в системе и отправляет его в платежный шлюз.
      security:
        - oauth2ClientCredentials: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Create_payment_request"
            examples:
              websitePayment:
                summary: Пример платежа с сайта
                value:
                  amount: 2500.75
                  payment_method: website
                  card_details:
                    card_number: "4111222233334444"
                    expiry_date: "12/25"
                    cvv: "123"
                    cardholder_name: "VLAD VLADOV"
              terminalPayment:
                summary: Пример платежа с терминала
                value:
                  amount: 1200.00
                  payment_method: terminal
                  card_details:
                    terminal_id: "TERM12345"
                    token(encripted): "tok_abcdef123456"
      responses:
        "201":
          description: Платеж успешно создан и принят в обработку
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
              examples:
                successResponse:
                  summary: Успешный ответ
                  value:
                    id: 12345
                    amount: 2500.75
                    payment_date: "2023-10-27T10:00:00Z"
                    payment_method: card
                    status_name: Pending
                    status_date_time: "2023-10-27T10:00:00Z"
                    error_code: null
        "400":
          description: Неверный запрос. Проверьте входные параметры.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                invalidInput:
                  summary: Пример ошибки валидации
                  value:
                    code: 400
                    error_name: BAD_REQUEST
                    message: "The amount must be greater than 0"
        "401":
          description: Необходима авторизация. Отсутствует или неверный токен.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  summary: Пример ошибки авторизации
                  value:
                    code: 401
                    error_name: UNAUTHORIZED
                    message: "Invalid or missing access token"
        "500":
          description: Внутренняя ошибка сервера. Что-то пошло не так на стороне сервера.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internalError:
                  summary: Пример внутренней ошибки
                  value:
                    code: 500
                    error_name: INTERNAL_ERROR
                    message: "An unexpected error occurred on the server side"

  /payments/{paymentId}/status:
    get:
      tags:
        - Операции с платежами
      summary: Получение статуса платежа
      operationId: getPaymentStatus
      description: Возвращает текущий статус платежа по его уникальному идентификатору.
      security:
        - oauth2ClientCredentials: []
      parameters:
        - name: paymentId
          in: path
          required: true
          description: Уникальный идентификатор платежа
          schema:
            type: integer
            pattern: ^\d{5}$
          example: 12345
      responses:
        "200":
          description: Статус платежа успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentStatus"
              examples:
                pendingStatus:
                  summary: Пример статуса "Ожидает обработки"
                  value:
                    payment_id: 12345
                    status_name: "Pending"
                    status_description: "The payment is in the processing queue"
                    status_date_time: "2023-10-27T10:00:00Z"
                    error_code: null
                successStatus:
                  summary: Пример статуса "Успешно"
                  value:
                    payment_id: 12345
                    status_name: "Success"
                    status_description: "Payment has been successfully processe"
                    status_date_time: "2023-10-27T10:01:30Z"
                    error_code: null
                failedStatus:
                  summary: Пример статуса "Отклонен"
                  value:
                    payment_id: 12345
                    status_name: "Failed"
                    status_description: "Insufficient funds in the account"
                    status_date_time: "2023-10-27T10:02:00Z"
                    error_code: "51"
        "401":
          description: Необходима авторизация.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                Error:
                  summary: Пример ошибки "Необходима авторизация"
                  value:
                    code: 401
                    error_name: UNAUTHORIZED
                    message: "Invalid or missing access token"
        "404":
          description: Платеж с указанным ID не найден.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                notFound:
                  summary: Пример ошибки "Не найден платееж с указанным ID"
                  value:
                    code: 404
                    error_name: NOT_FOUND
                    message: Payment with this ID was not found
        "500":
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InternalError:
                  summary: Пример внутренней ошибки
                  value:
                    code: 500
                    error_name: INTERNAL_ERROR
                    message: "An unexpected error occurred on the server side"

  /payments/{paymentId}/cancel:
    post:
      tags:
        - Операции с платежами
      summary: Отмена платежа
      operationId: cancelPayment
      description: Отменяет платеж, если он находится в подходящем для отмены статусе, такими как "создан" или "ожидании проверки". Невозможно воспользвоаться этим методом, если статус платежа "исполнен" или "ошибочный".
      security:
        - oauth2ClientCredentials: []
      parameters:
        - name: paymentId
          in: path
          required: true
          description: Уникальный идентификатор платежа для отмены
          schema:
            type: integer
            pattern: ^\d{5}$
          example: 12345
      responses:
        "200":
          description: Запрос на отмену платежа принят. Возвращает обновленный статус.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentStatus"
              examples:
                cancelAccepted:
                  summary: Пример успешной отмены
                  value:
                    payment_id: 12345
                    status_name: Cancelled
                    status_description: "The payment was successfully cancelled by the user"
                    status_date_time: "2023-10-27T10:05:00Z"
                    error_code: null
        "401":
          description: Необходима авторизация. Отсутствует или неверный токен.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                unauthorized:
                  summary: Пример ошибки авторизации
                  value:
                    code: 401
                    error_name: UNAUTHORIZED
                    message: "Invalid or missing access token"
        "404":
          description: Платеж с указанным ID не найден.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                notFound:
                  summary: Пример ошибки "Не найдено"
                  value:
                    code: 404
                    error_name: NOT_FOUND
                    message: Payment with this ID was not found
        "409":
          description: Невозможно отменить платеж в текущем статусе (например, уже Success или Failed).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                conflictStatus:
                  summary: Пример ошибки конфликта статуса
                  value:
                    code: 409
                    error_name: FORBIDDEN
                    message: "The payment cannot be canceled if it has the status Executed"
        "500":
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InternalError:
                  summary: Пример внутренней ошибки
                  value:
                    code: 500
                    error_name: INTERNAL_ERROR
                    message: "An unexpected error has occurred on the server side"

components:
  securitySchemes:
    oauth2ClientCredentials:
      type: oauth2
      description: Авторизация с использованием OAuth 2.0 Client Credentials Flow.
      flows:
        clientCredentials:
          tokenUrl: https://api.yashek.payments.system.ru/oauth/token
          scopes:
            payments:write: Разрешает создание и отмену платежей
            payments:read: Разрешает получение статуса платежей

  schemas:
    Create_payment_request:
      type: object
      required:
        - amount
        - payment_method
        - card_details
      properties:
        amount:
          type: number
          format: float
          minimum: 0.01
          maximum: 999999999.99
          description: Сумма платежа. Используется DECIMAL(18, 2) в БД.
          example: 1500.50
        payment_method:
          type: string
          description: Метод платежа (например, 'card').
          pattern: ^[a-z_]+$
          example: card
        card_details:
          $ref: "#/components/schemas/CardDetails"

    CardDetails:
      type: object
      required:
        - card_number
        - expiry_date
        - cvv
        - cardholder_name
      description: Детали банковской карты.
      properties:
        card_number:
          type: string
          pattern: ^\d{16}$
          description: Номер карты.
          example: "4111123412344444"
        expiry_date:
          type: string
          pattern: ^(0[1-9]|1[0-2])\/\d{2}$
          description: Срок действия карты в формате MM/YY.
          example: "12/25"
        cvv:
          type: string
          pattern: ^\d{3}$
          description: CVV/CVC код карты.
          example: "123"
        cardholder_name:
          type: string
          pattern: ^[A-Za-z\s'.-]{2,50}$
          minLength: 2
          maxLength: 100
          description: Имя держателя карты.
          example: "IVAN IVANOV"

    Payment:
      type: object
      description: Информация о платеже.
      properties:
        id:
          minimum: 1
          type: integer
          description: Уникальный идентификатор платежа. 
          readOnly: true
        amount:
          type: number
          format: float
          description: Сумма платежа. 
        payment_date:
          type: string
          format: date-time
          description: Дата и время создания платежа. 
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[+-]\d{2}:\d{2})?$
        payment_method:
          type: string
          pattern: ^[a-z_]{3,20}$
          description: Метод платежа. 
        status_name:
          type: string
          pattern: ^[A-Za-z\s-]{3,50}$
          description: Текущий статус платежа (например, 'Pending', 'Success', 'Failed', 'Cancelled'). Основано на Payment_status_ID в Client_payment и StatusName в Payment_status.
        status_date_time:
          type: string
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[+-]\d{2}:\d{2})?$
          format: date-time
          description: Дата и время последнего обновления статуса. 
        error_code:
          type: string
          pattern: ^[A-Z0-9_]{2,20}$|^$
          nullable: true
          description: Код ошибки, если платеж не прошел. 
        card_account_id:
          type: integer
          minimum: 1
          description: ID связанного карточного счета. 
          nullable: true

    PaymentStatus:
      type: object
      description: Информация о статусе платежа.
      properties:
        payment_id:
          minimum: 1
          type: integer
          description: Уникальный идентификатор платежа.
        status_name:
          type: string
          pattern: ^[A-Z0-9_]{2,20}$|^$
          description: Текущий статус платежа (например, 'Pending', 'Success', 'Failed', 'Cancelled'). Основано на Payment_status_ID в Client_payment и StatusName в Payment_status
        status_description:
          type: string
          nullable: true
          description: Описание статуса. 
        status_date_time:
          type: string
          pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?(Z|[+-]\d{2}:\d{2})?$
          format: date-time
          description: Дата и время последнего обновления статуса.
        error_code:
          type: number
          nullable: true
          minimum: 1000
          maximum: 99999
          description: Код ошибки, если платеж не прошел.

    Error:
      type: object
      description: Стандартный формат ответа при ошибке.
      properties:
        code:
          type: number
          minimum: 1
          maximum: 999
          description: Код ошибки
        error_name:
          type: string
          pattern: ^[A-Z_]{2,50}$
          enum:
            [
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND",
              "BAD_REQUEST",
              "INTERNAL_ERROR",
            ]
          description: Системное имя ошибки
        message:
          type: string
          pattern: "^[A-Za-z0-9\\s\\-.,:'\"!?()]{5,255}$"
          description: Описание причины ошибки
